------------------------------------
Doctest for module 0-add_integer.py
------------------------------------

Using ``add_integer()``

Import module:
	>>> add_integer = __import__('0-add_integer').add_integer


Test the cases that sums two integers:
     >>> add_integer(1, 2)
     3
     >>> add_integer(100, -2)
     98
     >>> add_integer(2)
     100
     >>> add_integer(100.3, -2)
     98
     >>> add_integer(-3, -2)
     -5
     >>> add_integer(-3, 2)
     -1
     >>> add_integer(0)
     98

Tests if default argument of 'b' is 98:
      >>> add_integer(2)
      100
      >>> add_integer(0)
      98

Tests if 'a' and 'b' are casted to int:
      >>> add_integer(3.2, 4.1)
      7

Tests if TypeError is correctly raised:
      >>> add_integer(4, "School")
      Traceback (most recent call last):
      TypeError: b must be an integer

      >>> add_integer(None)
      Traceback (most recent call last):
      TypeError: a must be an integer

Tests for NaN value:
      >>> add_integer(float('nan'))
      Traceback (most recent call last):
      ValueError: cannot convert float NaN to integer

Tests for infinity:
      >>> add_integer(float('inf'))
      Traceback (most recent call last):
      OverflowError: cannot convert float infinity to integer
